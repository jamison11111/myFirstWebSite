<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--DAO层是直接与数据库进行交互的层,xml文件自然是写道这一层模块中了-->
<mapper namespace="com.lwc.Dao.VideoDao">

    <insert id="addVideos" parameterType="com.lwc.domain.Video" useGeneratedKeys="true" keyProperty="id">
        insert into
                t_video(
                        userId,
                        url,
                        thumbnail,
                        title,
                        type,
                        duration,
                        area,
                        description,
                        createTime
                    )values(
                        #{userId},
                        #{url},
                        #{thumbnail},
                        #{title},
                        #{type},
                        #{duration},
                        #{area},
                        #{description},
                        #{createTime}
                        )
    </insert>
    <insert id="batchAddVideoTags" parameterType="java.util.List">
        insert into
                t_video_tag(
                            videoId,
                            tagId,
                            createTime
                            )values
                            <foreach collection="videoTagList" item="videoTag" separator=",">
                                (
                                 #{videoTag.videoId},
                                 #{videoTag.tagId},
                                 #{videoTag.createTime}
                                )
                            </foreach>
    </insert>
    <insert id="addVideoLike">
            insert into
                t_video_like(
                             userId,
                             videoId,
                             createTime
                            )values
                            (
                             #{userId},
                             #{videoId},
                             #{createTime}
                            )
    </insert>
    <insert id="addVideoCollection" parameterType="com.lwc.domain.VideoCollection">
        insert into
            t_video_collection(
                               videoId,
                               userId,
                               groupId,
                               createTime
                                )values(
                                #{videoId},
                                #{userId},
                                #{groupId},
                                #{createTime}
                               )
    </insert>
    <insert id="addCollectionGroup" parameterType="com.lwc.domain.CollectionGroup">
        insert into
            t_collection_group(
                               userId,
                               name,
                               type,
                               createTime
                                )values(
                                #{userId},
                                #{name},
                                #{type},
                                #{createTime}
                                )
    </insert>
    <insert id="postVideoCoins" parameterType="com.lwc.domain.VideoCoin">
        insert into
            t_video_coin(
                         userId,
                         videoId,
                         amount,
                         createTime
                        )values(
                         #{userId},
                         #{videoId},
                         #{amount},
                         #{createTime}
                        )
    </insert>
    <insert id="addVideoComment" parameterType="com.lwc.domain.VideoComment">
        insert into
            t_video_comment(
                            videoId,
                            userId,
                            comment,
                            replyUserId,
                            rootId,
                            createTime
                            )values(
                            #{videoId},
                            #{userId},
                            #{comment},
                            #{replyUserId},
                            #{rootId},
                            #{createTime}
                                   )
    </insert>
    <insert id="addVideoView" parameterType="com.lwc.domain.VideoView">
        insert into
            t_video_view(
                         videoId,
                         userId,
                         clientId,
                         ip,
                         createTime
                        )values
                        (
                         #{videoId},
                         #{userId},
                         #{clientId},
                         #{ip},
                         #{createTime}
                        )

    </insert>
    <insert id="batchAddVideoBinaryPictures" parameterType="java.util.List">
        insert into
            t_video_binary_picture(
                                 videoId,
                                 frameNo,
                                 url,
                                 videoTimestamp,
                                 createTime
                                )values
        <foreach collection="pictureList" item="picture" separator=",">
                                (
                                #{picture.videoId},
                                #{picture.frameNo},
                                #{picture.url},
                                #{picture.videoTimestamp},
                                #{picture.createTime}
                                )
        </foreach>
    </insert>
    <update id="updateCollectionGroup" parameterType="com.lwc.domain.CollectionGroup">
        update
            t_collection_group
        set
            name=#{name},
            type=#{type},
            updateTime=#{updateTime}
        where
            userId=#{userId} and id=#{id}
    </update>
    <update id="updateVideoCoins" parameterType="com.lwc.domain.VideoCoin">
        update
            t_video_coin
        set
            amount=#{amount},
            updateTime=#{updateTime}
        where
            videoId=videoId
    </update>
    <delete id="deleteVideoLike" parameterType="com.lwc.domain.VideoLike">
        delete from
                   t_video_like
        where
            id=#{id}
    </delete>
    <delete id="deleteVideoCollectionById">
        delete from
                t_video_collection
        where
            videoId=#{videoId} and userId=#{userId}
    </delete>
    <delete id="deleteCollectionGroup">
        delete from
                t_collection_group
        where
            userId=#{userId} and id=#{id}
    </delete>
    <select id="pageCountVideos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_video
        where
            1=1
        <if test="area!=null and area!=''">
            and area=#{area}
        </if>
    </select>
    <select id="pageListVideos" parameterType="java.util.Map" resultType="com.lwc.domain.Video">
        select
            *
        from
            t_video
        where
            1=1
        <if test="area!=null and area!=''">
            and area=#{area}
        </if>
        order by id desc
        limit #{start},#{limit}
    </select>
    <select id="getVideoById" parameterType="java.lang.Long" resultType="com.lwc.domain.Video">
        select
            *
        from
            t_video
        where
            id=#{videoId}
    </select>
    <select id="getVideoLikeByVideoIdAndUserId" resultType="com.lwc.domain.VideoLike">
        select
            *
        from
            t_video_like
        where
            videoId=#{videoId} and userId=#{userId}
    </select>
    <select id="getVideoLikes" parameterType="java.lang.Long" resultType="java.lang.Long">
        select
            count(1)
        from
            t_video_like
        where
            videoId=#{videoId}
    </select>

    <select id="getCollectionGroupByGroupIdAndUserId" resultType="com.lwc.domain.CollectionGroup">
        select
            *
        from
            t_collection_group
        where usedId=#{userId} and id=#{groupId}
    </select>
    <select id="countVideoCollections" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_video_collection
        where
            videoId=#{videoId}
    </select>
    <select id="getVideoCollectionByuserIdAndVideoId" resultType="com.lwc.domain.VideoCollection">
        select
            *
        from
            t_video_collection
        where userId=#{userId} and videoId=#{videoId}
    </select>
    <select id="getCollectionGroupListByUserId" parameterType="java.lang.Long" resultType="com.lwc.domain.CollectionGroup">
        select
            *
        from
            t_collection_group
        where
            userId=#{userId}
    </select>
    <select id="getVideoCollectionByGroupId" parameterType="java.lang.Long" resultType="com.lwc.domain.VideoCollection">
        select
            *
        from
            t_video_collection
        where
            groupId=#{groupId}
    </select>
    <select id="getVideoCoinByUserIdAndVideoId" resultType="com.lwc.domain.VideoCoin">
        select
            *
        from
            t_video_coin
        where
            videoId=#{videoId} and userId=#{userId}
    </select>
    <select id="getVideoCoinsAmount" parameterType="java.lang.Long" resultType="java.lang.Long">
        select
            sum(amount)
        from
            t_video_coin
        where videoId=#{videoId}
    </select>
    <select id="countVideoComments" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_video_comment
        where videoId=#{videoId} and rootId=null
    </select>
    <select id="pageListVideoComments" parameterType="java.util.Map" resultType="com.lwc.domain.VideoComment">
        select
            *
        from
            t_video_comment
        where
            videoId=#{videoId} and rootId=null
        order by id desc
            limit #{start},#{limit}
    </select>
    <select id="getcVideoCommentChildListByRootIdAndVideoId" resultType="com.lwc.domain.VideoComment">
            select
                *
            from
                t_video_comment
            where rootId=#{rootId} and videoId=#{videoId} and userId=null
    </select>
    <select id="getAllChildCommentByCommentIds" parameterType="java.util.Set" resultType="com.lwc.domain.VideoComment">
        select
            *
        from
            t_video_comment
        where
            rootId in
        <foreach collection="rootIdSet" item="rootId" open="(" close=")" separator=",">
            #{rootId}
        </foreach>
        order by id asc   /*不指定排序顺序的话，默认也是升序*/
    </select>
    <select id="getChildCommentByRootId" resultType="com.lwc.domain.VideoComment" parameterType="java.lang.Long">
        select
            *
        from
            t_video_comment
        where
            rootId=#{id}
        order by id asc   /*不指定排序顺序的话，默认也是升序*/
    </select>
    <!--关键是理清楚命中条件-->
    <select id="getVideoView" resultType="com.lwc.domain.VideoView" parameterType="java.util.Map">
            select
                *
            from
                t_video_view
            where
                videoId=#{videoId} and DATE_FORMAT(createTime,'%Y-%m-%d')=#{today}
            <if test="userId!=null and userId!=''">
                and userId=#{userId}
            </if>
            <if test="userId==null and clientId!=null and clientId!=''">
                and clientId=#{clientId}
            </if>
            <if test="userId==null and ip!=null and ip!=''">
                and ip=#{ip}
            </if>
    </select>
    <select id="getVideoViewCounts" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select
            count(1)
        from
            t_video_view
        where
            videoId=#{videoId}
    </select>
    <select id="getAllUserPreference" resultType="com.lwc.domain.UserPreference">
        select
            userId,videoId,
            sum(case operationType
                    when '0' then 6
                    when '1' then 2
                    when '2' then 2
                    else 0 end
                )as 'value'
        from t_video_operation
        group by userId,videoId
    </select>
    <select id="batchGetVideosByIds" resultType="com.lwc.domain.Video" >
        select
            *
        from t_video
        where
            id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>


</mapper>

<!--一张表对应domain的一个实体类,对应一个Dao接口类和一个Service类以及一个xml文件，也即一个xml文件,一个Dao接口和一个Service只能操作一张表
 ,他们和表是一一对应的关系，这样做符合开发的规范，不会乱-->